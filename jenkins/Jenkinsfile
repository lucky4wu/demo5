pipeline {
    agent any

    stages {
        stage('Compile') {
                steps {
                    gradlew('clean', 'classes')
                }
            }
        stage('Unit Tests') {
                steps {
                    gradlew('test')
                }
                post {
                    always {
                        junit '**/build/test-results/test/TEST-*.xml'
                    }
                }
            }
        stage('Long-running Verification') {
                environment {
                    SONAR_LOGIN = credentials('SONARCLOUD_TOKEN')
                }
                parallel {
                    stage('Integration Tests') {
                        steps {
                            gradlew('integrationTest')
                        }
                        post {
                            always {
                                junit '**/build/test-results/integrationTest/TEST-*.xml'
                            }
                        }
                    }
                    stage('Code Analysis') {
                        steps {
                            gradlew('sonarqube')
                        }
                    }
                }
            }
        stage('Assemble') {
                    steps {
                        gradlew('assemble')
                        stash includes: '**/build/libs/*.jar', name: 'app'
                    }
                }
                stage('Promotion') {
                    steps {
                        timeout(time: 1, unit:'DAYS') {
                            input 'Deploy to Production?'
                        }
                    }
                }
        stage('Deploy') {
            steps {
                sh 'docker build -t spring-boot-docker .'
            }
        }
    }
}

def gradlew(String... args) {
    sh 'pwd'
    sh 'sudo chmod +x gradlew'
    sh "./gradlew ${args.join(' ')} -s"
}